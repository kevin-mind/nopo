name: App Names
description: Get app names based on existing fly/configs/*.toml files

inputs:
  environment:
    description: The environment to get app names for
    required: false
    default: "*"
  app:
    description: The app to get app names for
    required: false
    default: "*"

outputs:
  app_names:
    description: The app names
    value: ${{ steps.app_names.outputs.app_names }}

runs:
  using: 'composite'
  steps:
    - name: Set App Names
      shell: bash
      id: app_names
      env:
        environment: ${{ inputs.environment }}
        app: ${{ inputs.app }}
      run: |
        # This block finds all fly/configs/nopo-${environment}-${app}.toml files,
        # extracts the app names from the filenames, sorts and deduplicates them,
        # and outputs a compact JSON array of app names.
        # Example:
        #   environment="stage", app="*"
        #   Files: fly/configs/nopo-stage-api.toml, fly/configs/nopo-stage-web.toml
        #   Output: ["nopo-stage-api","nopo-stage-web"]
        # Example 2:
        #   environment="prod", app="api"
        #   Files: fly/configs/nopo-prod-api.toml
        #   Output: ["nopo-prod-api"]
        # Example 3:
        #   environment="prod", app="*"
        #   Files: fly/configs/nopo-stage-api.toml, fly/configs/nopo-stage-web.toml
        app_names=$(
          ls fly/configs/nopo-${environment}-${app}.toml \
            | xargs -n 1 basename \
            | sed 's/\.toml$//' \
            | sort -u \
            | jq -R . \
            | jq -s . \
            | jq -c .
        )

        echo "app_names=${app_names}" >> "$GITHUB_OUTPUT"
        cat "$GITHUB_OUTPUT"

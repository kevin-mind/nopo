name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to deploy'
        required: true
        type: string
      digest:
        description: 'The digest to deploy'
        required: false
        type: string
      environment:
        description: 'The environment to deploy to'
        required: true
        type: choice
        options:
          - stage
          - prod

  workflow_call:
    inputs:
      version:
        description: 'The version to deploy'
        required: true
        type: string
      digest:
        description: 'The digest to deploy'
        required: false
        type: string
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string

permissions: {}

defaults:
  run:
    shell: bash

concurrency:
  group: deploy
  cancel-in-progress: false

env:
  PUBLIC_URL: https://nopo-${{ inputs.environment }}.fly.dev

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      app_names: ${{ steps.app_names.outputs.app_names }}
      app_list: ${{ join(fromJson(steps.app_names.outputs.app_names), ', ') }}
    steps:
      - uses: actions/checkout@v4

      - name: Set App Names
        id: app_names
        uses: ./.github/actions/app-names
        with:
          environment: ${{ inputs.environment }}

  pre_approve:
    name: Preparing to deploy ${{ needs.context.outputs.app_list }}
    needs: [context]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      pull_tag: ${{ steps.pull_tag.outputs.tag }}
      env_tag: ${{ steps.env_tag.outputs.tag }}
      rollback_version: ${{ steps.rollback_version.outputs.version }}
      pull_version: ${{ steps.pull_tag.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - uses: ./.github/actions/setup-docker
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Tag
        id: pull_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: ghcr.io
          image: ${{ github.repository }}
          version: ${{ inputs.version }}
          digest: ${{ inputs.digest }}

      - name: Environment Tag
        id: env_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: ghcr.io
          image: ${{ github.repository }}
          version: ${{ inputs.environment }}

      - name: Get Rollback Version
        id: rollback_version
        shell: bash
        continue-on-error: true
        env:
          pull_tag: ${{ steps.env_tag.outputs.tag }}
        run: |
          docker pull "${pull_tag}"
          version=$(docker run --rm "${pull_tag}" cat /build-info.json | jq -r '.version')
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    needs: [context, pre_approve]
    timeout-minutes: 10
    concurrency:
      group: deploy-job-${{ matrix.app_name }}
    strategy:
      matrix:
        app_name: ${{ fromJson(needs.context.outputs.app_names) }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - uses: ./.github/actions/setup-docker
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Tag
        id: push_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: registry.fly.io
          image: ${{ matrix.app_name }}
          version: ${{ needs.pre_approve.outputs.pull_version }}

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Login to Fly
        run: flyctl auth docker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Push image
        env:
          pull_tag: ${{ needs.pre_approve.outputs.pull_tag }}
          push_tag: ${{ steps.push_tag.outputs.tag }}
        run: |
          docker pull "${pull_tag}"
          docker tag "${pull_tag}" "${push_tag}"
          docker push "${push_tag}"

      - name: Deploy to Fly
        id: deploy
        uses: ./.github/actions/deploy
        with:
          token: ${{ secrets.FLY_API_TOKEN }}
          app_name: ${{ matrix.app_name }}
          version: ${{ steps.push_tag.outputs.version }}

  deploy_nginx:
    runs-on: ubuntu-latest
    needs: [context, deploy]
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Nginx
        id: deploy_nginx
        uses: ./.github/actions/deploy
        with:
          token: ${{ secrets.FLY_API_TOKEN }}
          app_name: nopo-${{ inputs.environment }}
          file: docker/Dockerfile.nginx

      - name: Smoke test
        uses: ./.github/actions/smoketest
        with:
          public_url: ${{ env.PUBLIC_URL }}

  post_approve:
    name: Approve deployments for ${{ needs.context.outputs.app_list }}
    if: |
      always() &&
      needs.deploy.result == 'success' &&
      needs.deploy_nginx.result == 'success'
    needs: [context, pre_approve, deploy, deploy_nginx]
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ env.PUBLIC_URL }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-docker
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Environment Image
        env:
          pull_tag: ${{ needs.pre_approve.outputs.pull_tag }}
          push_tag: ${{ needs.pre_approve.outputs.env_tag }}
        run: |
          docker pull "${pull_tag}"
          docker tag "${pull_tag}" "${push_tag}"
          docker push "${push_tag}"

  rollback:
    if: |
      always() &&
      needs.pre_approve.outputs.rollback_version != '' &&
      (needs.deploy.result != 'success'|| needs.post_approve.result != 'success')
    name: Rollback
    needs: [context, pre_approve, deploy, deploy_nginx, post_approve]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        app_name: ${{ fromJson(needs.context.outputs.app_names) }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Rollback Tag
        id: rollback_tag
        uses: ./.github/actions/docker-tag
        with:
          registry: registry.fly.io
          image: ${{ matrix.app_name }}
          version: ${{ needs.pre_approve.outputs.rollback_version }}

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Rollback
        id: rollback
        uses: ./.github/actions/deploy
        with:
          token: ${{ secrets.FLY_API_TOKEN }}
          image: ${{ steps.rollback_tag.outputs.tag }}
          app_name: ${{ matrix.app_name }}
          version: ${{ steps.rollback_tag.outputs.version }}




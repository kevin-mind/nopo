name: Run

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: The environment to run the command on
        required: true
        options:
          - stage
          - prod
      app:
        type: choice
        description: The app to run the command on
        required: true
        options:
          - backend
          - web
      command:
        type: string
        description: The command to run
        required: true

permissions: {}

jobs:
  context:
    runs-on: ubuntu-latest

    outputs:
      app_name: ${{ steps.app.outputs.app_name }}
      is_fork: ${{ steps.context.outputs.is_fork }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Context
        id: context
        uses: ./.github/actions/context

      - name: App Names
        id: app_names
        uses: ./.github/actions/app-names
        with:
          environment: ${{ inputs.environment }}
          app: ${{ inputs.app }}

      - name: App
        id: app
        env:
          app: ${{ inputs.app }}
          environment: ${{ inputs.environment }}
          app_names: ${{ steps.app_names.outputs.app_names }}
        run: |
          app_name=""
          if [ $(echo "${app_names}" | jq -r 'length') -eq 1 ]; then
            app_name=$(echo "${app_names}" | jq -r '.[0]')
          else
            echo "Error: Multiple app names ${app_names} found for ${app} in ${environment}"
            exit 1
          fi

          echo "app_name=${app_name}" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

  run:
    needs: [context]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          app_name: ${{ needs.context.outputs.app_name }}
          app: ${{ inputs.app }}
          command: ${{ inputs.command }}
          user: nodeuser
        run: |
          make fly console \
            app="${app_name}" \
            user="${user}" \
            command="pnpm run --filter=\"@more/${app}\" ${command}"

